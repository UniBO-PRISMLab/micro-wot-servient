{"ssid":"Rachelli-net","password":"3eKLtrdFwfQXgpv!","portserver":"80","portsocket":"81","portcoap":"5683","libraries":["WebSocketsClient.h"],"constants":[],"globals":[{"name":"GREENLED","type":"const int","value":"12"},{"name":"REDLED","type":"const int","value":"33"},{"name":"HTTPUrl","type":"const char*","value":"http://192.168.1.106/bike-rack/events/hasParkChanged"},{"name":"webSocket","type":"WebSocketsClient","value":""}],"setup":"// property0_value[0] = false;\n// property0_value[1] = false;\n// property0_value[2] = false;\n// This statement will declare pin 22 as digital output \npinMode(GREENLED, OUTPUT);\npinMode(REDLED, OUTPUT);\n// This statement will declare pin 15 as digital input \n// pinMode(SENSOR0, INPUT);\n// pinMode(SENSOR1, INPUT);\n\n// server address, port and URL\n\twebSocket.begin(\"192.168.1.106\", 81, \"/bike-rack/events/hasParkChanged\");\n\n\t// event handler\n\twebSocket.onEvent(webSocketEvent);\n\n\t// use HTTP Basic Authorization this is optional remove if not needed\n//\twebSocket.setAuthorization(\"user\", \"Password\");\n\n\t// try ever 5000 again if connection has failed\n\twebSocket.setReconnectInterval(5000);","loop":"webSocket.loop();\n\n\n// Serial.println(\"Speriamo0\");\n// HTTPClient http;\n// Serial.println(\"Speriamo0.1\");\n\n// http.begin(HTTPUrl);\n// Serial.println(\"Speriamo0.2\");\n\n// int httpResponseCode = http.GET();\n// Serial.println(\"Speriamo1\");\n// if (httpResponseCode>0) {\n//   String payload = http.getString();\n  \n//   DynamicJsonDocument doc(600);\n//   // http.end();\n//   Serial.println(\"Speriamo2\");\n//   Serial.println(payload);\n//   deserializeJson(doc, payload);\n//   // extract the values\n//   JsonObject obj = doc.as<JsonObject>();\n//   JsonArray array = obj[\"parks\"];\n//   bool tot = true;\n//   for(JsonVariant v : array) {\n//     Serial.println(\"Speriamo3-4\");\n//     bool vas = v.as<bool>();\n//     tot = tot && vas;\n//   }\n//   Serial.println(\"Speriamo5\");\n//   if (tot) {\n//     Serial.println(\"Rosso\");\n//     digitalWrite(GREENLED, LOW);\n//     digitalWrite(REDLED, HIGH);   \n//   } else {\n//     Serial.println(\"Verde\");\n//     digitalWrite(GREENLED, HIGH);\n//     digitalWrite(REDLED, LOW);\n//   }\n//   Serial.println(\"Speriamo6\");\n//   doc.clear();\n// }\n// Serial.println(\"Speriamo7\");\n// // http.end();\n// Serial.println(\"Speriamo8\");","code":"void webSocketEvent(WStype_t type, uint8_t * payload, size_t length) {\n  DynamicJsonDocument doc(600);\n  JsonObject obj;\n  JsonArray array;\n  JsonVariant v;\n  DeserializationError err;\n  bool vas, tot;\n  \n  switch(type) {\n    case WStype_DISCONNECTED:\n      Serial.printf(\"[WSc] Disconnected!\\n\");\n      break;\n     case WStype_CONNECTED:\n      Serial.printf(\"[WSc] Connected to url: %s\\n\", payload);\n\n      // send message to server when Connected\n      webSocket.sendTXT(\"{}\");\n      break;\n    case WStype_TEXT:\n      Serial.printf(\"[WSc] get text: %s\\n\", payload);\n      err = deserializeJson(doc, payload);\n      // extract the values\n      if (!err) {\n        obj = doc.as<JsonObject>();\n        array = obj[\"parks\"];\n        tot = true;\n        for(v : array) {\n          vas = v.as<bool>();\n          tot = tot && vas;\n        }\n      } else tot = false;\n      if (tot) {\n        Serial.println(\"Rosso\");\n        digitalWrite(GREENLED, LOW);\n        digitalWrite(REDLED, HIGH);   \n      } else {\n        Serial.println(\"Verde\");\n        digitalWrite(GREENLED, HIGH);\n        digitalWrite(REDLED, LOW);\n      }\n\n      // send message to server\n      // webSocket.sendTXT(\"message here\");\n      break;\n    case WStype_BIN:\n    case WStype_ERROR:      \n    case WStype_FRAGMENT_TEXT_START:\n    case WStype_FRAGMENT_BIN_START:\n    case WStype_FRAGMENT:\n    case WStype_FRAGMENT_FIN:\n      break;\n    }\n  }","actionFunctions":[{"source":"cli","name":"statusChanged","body":"return;","output":{},"input":[]}],"eventConditions":[{"condition":"true","actions":["statusChanged"]}]}